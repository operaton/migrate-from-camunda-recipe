<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.operaton</groupId>
    <artifactId>migrate-camunda-recipe</artifactId>
    <version>1.0.0-beta-4-SNAPSHOT</version>

    <name>Operaton - Migrate Camunda Recipe</name>
    <description>Open Rewrite recipes for the migration from Camunda 7 to Operaton</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <version.rewrite-recipe-bom>3.14.0</version.rewrite-recipe-bom>
        <rewrite-maven-plugin.version>6.16.1</rewrite-maven-plugin.version>
        <rewrite-rewrite.version>0.12.1</rewrite-rewrite.version>
        <rewrite-templating.version>1.34.1</rewrite-templating.version>
        <version.camunda>7.23.0</version.camunda>
        <version.operaton>1.0.0-beta-5</version.operaton>
        <version.lombok>1.18.40</version.lombok>
        <version.javax.annotation-api>1.3.2</version.javax.annotation-api>
        <version.error_prone>2.41.0</version.error_prone>
        <version.assertj>3.27.4</version.assertj>
        <version.junit-bom>5.13.4</version.junit-bom>
        <version.maven-compiler-plugin>3.14.0</version.maven-compiler-plugin>
        <version.maven-surefire-plugin>3.5.3</version.maven-surefire-plugin>
        <version.maven-failsafe-plugin>3.5.3</version.maven-failsafe-plugin>
        <version.maven-resources-plugin>3.3.1</version.maven-resources-plugin>
        <version.maven-dependency-plugin>3.8.1</version.maven-dependency-plugin>
        <version.maven-source-plugin>3.3.1</version.maven-source-plugin>
        <version.maven-javadoc-plugin>3.11.3</version.maven-javadoc-plugin>
        <version.jreleaser-maven-plugin>1.20.0</version.jreleaser-maven-plugin>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${version.lombok}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>

        <!-- Refaster style recipes need the rewrite-templating annotation processor and dependency for generated recipes -->
        <dependency>
            <groupId>org.openrewrite</groupId>
            <artifactId>rewrite-templating</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>${version.javax.annotation-api}</version>
        </dependency>

        <!-- Makes Data flow analysis capabilities available to recipes -->
        <dependency>
            <groupId>org.openrewrite.meta</groupId>
            <artifactId>rewrite-analysis</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.errorprone</groupId>
            <artifactId>error_prone_core</artifactId>
            <version>${version.error_prone}</version>
            <scope>provided</scope>
            <optional>true</optional>
            <exclusions>
                <exclusion>
                    <groupId>com.google.auto.service</groupId>
                    <artifactId>auto-service-annotations</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.openrewrite</groupId>
            <artifactId>rewrite-java</artifactId>
        </dependency>

        <dependency>
            <groupId>org.openrewrite</groupId>
            <artifactId>rewrite-yaml</artifactId>
        </dependency>

        <dependency>
            <groupId>org.openrewrite.recipe</groupId>
            <artifactId>rewrite-java-dependencies</artifactId>
        </dependency>

        <dependency>
            <groupId>org.openrewrite.recipe</groupId>
            <artifactId>rewrite-spring</artifactId>
        </dependency>

        <!-- Camunda dependencies -->
        <dependency>
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.camunda.bpm.springboot</groupId>
            <artifactId>camunda-bpm-spring-boot-starter</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.camunda.bpm.springboot</groupId>
            <artifactId>camunda-bpm-spring-boot-starter-webapp</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Operaton dependencies -->
        <dependency>
            <groupId>org.operaton.bpm</groupId>
            <artifactId>operaton-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- test dependencies -->

        <dependency>
            <groupId>org.openrewrite</groupId>
            <artifactId>rewrite-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${version.assertj}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.openrewrite.recipe</groupId>
                <artifactId>rewrite-recipe-bom</artifactId>
                <version>${version.rewrite-recipe-bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${version.junit-bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.camunda.bpm</groupId>
                <artifactId>camunda-only-bom</artifactId>
                <type>pom</type>
                <scope>import</scope>
                <version>${version.camunda}</version>
            </dependency>
            <dependency>
                <groupId>org.operaton.bpm</groupId>
                <artifactId>operaton-only-bom</artifactId>
                <type>pom</type>
                <scope>import</scope>
                <version>${version.operaton}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.maven-compiler-plugin}</version>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                    <testSource>17</testSource>
                    <testTarget>17</testTarget>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${version.lombok}</version>
                        </path>
                        <path>
                            <groupId>org.openrewrite</groupId>
                            <artifactId>rewrite-templating</artifactId>
                            <version>${rewrite-templating.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.maven-surefire-plugin}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${version.maven-failsafe-plugin}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${version.maven-resources-plugin}</version>
                <configuration>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>jar</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${version.maven-dependency-plugin}</version>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/src/main/resources/META-INF/rewrite/classpath
                            </outputDirectory>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <!-- Configure and enable the plugin when you use `classpathFromResources` in `JavaTemplate` -->
                            <skip>true</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--
                Only needed when you want to apply the OpenRewriteBestPractices recipe to your recipes through
                ./mvnw rewrite:run
            -->
            <plugin>
                <groupId>org.openrewrite.maven</groupId>
                <artifactId>rewrite-maven-plugin</artifactId>
                <version>${rewrite-maven-plugin.version}</version>
                <configuration>
                    <activeRecipes>
                        <activeRecipe>org.openrewrite.recipes.rewrite.OpenRewriteRecipeBestPractices</activeRecipe>
                    </activeRecipes>
                    <failOnDryRunResults>true</failOnDryRunResults>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.openrewrite.recipe</groupId>
                        <artifactId>rewrite-rewrite</artifactId>
                        <version>${rewrite-rewrite.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>${version.maven-source-plugin}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${version.maven-javadoc-plugin}</version>
                        <configuration>
                            <failOnError>false</failOnError>
                            <additionalJOptions>
                                <additionalJOption>-Xdoclint:none</additionalJOption>
                                <additionalJOption>--ignore-source-errors</additionalJOption>
                            </additionalJOptions>
                            <doctitle>Operaton Javadocs ${project.version}</doctitle>
                            <windowtitle>Operaton Javadocs ${project.version}</windowtitle>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.jreleaser</groupId>
                        <artifactId>jreleaser-maven-plugin</artifactId>
                        <version>${version.jreleaser-maven-plugin}</version>
                        <inherited>false</inherited>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <url>http://www.operaton.org</url>

    <developers>
        <developer>
            <id>operaton.org</id>
            <name>OPERATON Community</name>
            <organization>operaton.org</organization>
            <organizationUrl>http://operaton.org</organizationUrl>
        </developer>
    </developers>

    <scm>
        <url>https://github.com/operaton/migrate-from-camunda-recipe</url>
        <connection>scm:git:git://github.com/operaton/migrate-from-camunda-recipe.git</connection>
        <developerConnection>${project.scm.connection}</developerConnection>
    </scm>

</project>
