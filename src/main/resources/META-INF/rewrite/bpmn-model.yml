---
type: specs.openrewrite.org/v1beta/recipe
name: org.operaton.rewrite.MigrateBpmnModel
displayName: Migrate from Camunda BpmnModelInstance to Operaton BpmnModelInstance
description: Replaces usage of `org.camunda.bpm.model.bpmn.BpmnModelInstance` with `org.operaton.bpm.model.bpmn.BpmnModelInstance` and related method calls.
recipeList:
  # Change package names
  - org.openrewrite.java.ChangePackage:
      oldPackageName: org.camunda.bpm.model.bpmn
      newPackageName: org.operaton.bpm.model.bpmn
      recursive: true

  # Change method names from camundaXXX to operatonXXX
  # Process and general attributes
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaVersionTag(String)'
      newMethodName: 'operatonVersionTag'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaJobPriority(String)'
      newMethodName: 'operatonJobPriority'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaHistoryTimeToLive(String)'
      newMethodName: 'operatonHistoryTimeToLive'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaHistoryTimeToLive(Integer)'
      newMethodName: 'operatonHistoryTimeToLive'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaHistoryTimeToLiveString(String)'
      newMethodName: 'operatonHistoryTimeToLiveString'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaStartableInTasklist(Boolean)'
      newMethodName: 'operatonStartableInTasklist'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaTaskPriority(String)'
      newMethodName: 'operatonTaskPriority'

  # Async execution
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaAsyncBefore()'
      newMethodName: 'operatonAsyncBefore'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaAsyncBefore(boolean)'
      newMethodName: 'operatonAsyncBefore'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaAsyncAfter()'
      newMethodName: 'operatonAsyncAfter'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaAsyncAfter(boolean)'
      newMethodName: 'operatonAsyncAfter'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaExclusive(boolean)'
      newMethodName: 'operatonExclusive'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaAsync()'
      newMethodName: 'operatonAsync'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaAsync(boolean)'
      newMethodName: 'operatonAsync'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaFailedJobRetryTimeCycle(String)'
      newMethodName: 'operatonFailedJobRetryTimeCycle'

  # Task implementation
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaDelegateExpression(String)'
      newMethodName: 'operatonDelegateExpression'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaClass(String)'
      newMethodName: 'operatonClass'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaClass(Class)'
      newMethodName: 'operatonClass'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaExpression(String)'
      newMethodName: 'operatonExpression'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaResultVariable(String)'
      newMethodName: 'operatonResultVariable'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaExternalTask(String)'
      newMethodName: 'operatonExternalTask'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaType(String)'
      newMethodName: 'operatonType'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaTopic(String)'
      newMethodName: 'operatonTopic'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaErrorEventDefinition()'
      newMethodName: 'operatonErrorEventDefinition'

  # Form handling
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaFormKey(String)'
      newMethodName: 'operatonFormKey'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaFormField()'
      newMethodName: 'operatonFormField'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaFormRef(String)'
      newMethodName: 'operatonFormRef'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaFormRefBinding(String)'
      newMethodName: 'operatonFormRefBinding'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaFormRefVersion(String)'
      newMethodName: 'operatonFormRefVersion'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaFormHandlerClass(String)'
      newMethodName: 'operatonFormHandlerClass'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaInitiator(String)'
      newMethodName: 'operatonInitiator'

  # Input/Output parameters
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaInputParameter(String, String)'
      newMethodName: 'operatonInputParameter'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaOutputParameter(String, String)'
      newMethodName: 'operatonOutputParameter'

  # Execution and task listeners
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaExecutionListenerClass(String, String)'
      newMethodName: 'operatonExecutionListenerClass'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaExecutionListenerClass(String, Class)'
      newMethodName: 'operatonExecutionListenerClass'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaExecutionListenerExpression(String, String)'
      newMethodName: 'operatonExecutionListenerExpression'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaExecutionListenerDelegateExpression(String, String)'
      newMethodName: 'operatonExecutionListenerDelegateExpression'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaTaskListenerClass(String, String)'
      newMethodName: 'operatonTaskListenerClass'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaTaskListenerExpression(String, String)'
      newMethodName: 'operatonTaskListenerExpression'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.builder.* camundaTaskListenerDelegateExpression(String, String)'
      newMethodName: 'operatonTaskListenerDelegateExpression'

  # Instance methods (getCamundaXXX methods)
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaVersionTag()'
      newMethodName: 'getOperatonVersionTag'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaJobPriority()'
      newMethodName: 'getOperatonJobPriority'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaHistoryTimeToLive()'
      newMethodName: 'getOperatonHistoryTimeToLive'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaStartableInTasklist()'
      newMethodName: 'getOperatonStartableInTasklist'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaTaskPriority()'
      newMethodName: 'getOperatonTaskPriority'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaAsyncBefore()'
      newMethodName: 'getOperatonAsyncBefore'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaAsyncAfter()'
      newMethodName: 'getOperatonAsyncAfter'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaExclusive()'
      newMethodName: 'getOperatonExclusive'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaAsync()'
      newMethodName: 'getOperatonAsync'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaFailedJobRetryTimeCycle()'
      newMethodName: 'getOperatonFailedJobRetryTimeCycle'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaDelegateExpression()'
      newMethodName: 'getOperatonDelegateExpression'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaClass()'
      newMethodName: 'getOperatonClass'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaExpression()'
      newMethodName: 'getOperatonExpression'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaResultVariable()'
      newMethodName: 'getOperatonResultVariable'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaExternalTask()'
      newMethodName: 'getOperatonExternalTask'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaType()'
      newMethodName: 'getOperatonType'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaTopic()'
      newMethodName: 'getOperatonTopic'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaFormKey()'
      newMethodName: 'getOperatonFormKey'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaFormRef()'
      newMethodName: 'getOperatonFormRef'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaFormRefBinding()'
      newMethodName: 'getOperatonFormRefBinding'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaFormRefVersion()'
      newMethodName: 'getOperatonFormRefVersion'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaFormHandlerClass()'
      newMethodName: 'getOperatonFormHandlerClass'

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: 'org.operaton.bpm.model.bpmn.instance.* getCamundaInitiator()'
      newMethodName: 'getOperatonInitiator'
